<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Taha Portfolio</title>
    <link>https://localhost:1313/tags/python/</link>
    <description>Recent content in Python on Taha Portfolio</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 05 Aug 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://localhost:1313/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using Celery with Django for Asynchronous Tasks</title>
      <link>https://localhost:1313/posts/django-celery-2024/</link>
      <pubDate>Mon, 05 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://localhost:1313/posts/django-celery-2024/</guid>
      <description>Introduction Celery is a powerful, distributed task queue that can be used with Django to handle asynchronous tasks and background processing. This guide will walk you through setting up Celery with Django and demonstrate how to use it effectively in your projects.&#xA;Table of Contents Installation Configuration Creating Tasks Running Tasks Periodic Tasks Monitoring Best Practices Installation First, you need to install Celery and its dependencies:&#xA;pip install celery redis django-celery-results We&amp;rsquo;ll use Redis as our message broker, but you can also use RabbitMQ or other brokers supported by Celery.</description>
    </item>
  </channel>
</rss>
